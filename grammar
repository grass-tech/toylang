# 说明

- 关键字 keyword
var <VarName> = <Expr>
              ^
              |
            EQUAL

if <Condition> {println('test')}
                   ^
                   |
            BUILTIN_FUNCTION
elseif <Condition> {println("test elseif")}
else {println("test else")}

for <VarName> from [INT] to [INT] (step [INT] -> 1) {println(<VarName>)}
               ^                         ^                   ^
               |                         |                   |
             KEYWORD                CHOOSEABLE            CLUSTER

foriter <VarName> by (<Var> | [Array]) {println(<VarName>)}

repeat (meet | until) {println('Repeat Again')}
             ^
             |
         Choose One

delete <Variable>
           ^
           |
     Delete Variable

function <FuncName> {println('enter function')}

- 内置函数
输出到标准屏幕 -> println(('<String>' | <Number> | <Expression*>))
从用户获取输入 -> readline('<String>' | <Number> | <Expression*>)
获取字符串/数组的长度 -> length('<String>' | <Expression*> | [<Array>])
将值转换成整数 -> int('<String>' | <Number> | <Expression*>)
将值转换成浮点数 -> float('<String>' | <Number> | <Expression*>)
将值转换成字符串 -> string('<String>' | <Number> | <Expression*>)
将值转换成布尔值 -> boolean('<String>' | <Number> | <Expression*>)
将值转换成数组 -> array('<String>' | <Number> | <Expression*>)
运行文件 -> run('<File>')


# ADDITIONAL:
    <VarName> ? <Expression> : <Expression> 三元表达式 Ternary Expression
    <VarName> -> <AnotherVarName>  变量别名 Variable as another Name
              ^
              |
          AS Character

低级Least: Number <- (PLUS | MINUS) -> Number
中等Middle: Number <- (MUL | DIV) -> Number
最高High: Number <- (POW | INTEGER_DIV) -> Number

# Token令牌
! : NOT
? : WHETHER
| : OR
& : AND
-> : AS